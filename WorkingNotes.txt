--Kaynak reposu:
https://github.com/carpediem23/reactjs-corporate-learning-materials
--React app docker ile calistirma : https://medium.com/@carpediem.2323/react-js-uygulaman%C4%B1z%C4%B1-docker%C4%B1n-g%C3%BCc%C3%BCyle-nas%C4%B1l-s%C3%BCper-y%C3%BCksek-h%C4%B1zda-%C3%A7al%C4%B1%C5%9Ft%C4%B1r%C4%B1rs%C4%B1n%C4%B1z-71f9cc8ef5d2

--------------------------------------------------------------------------------------------------------------------------
npm i -g npm (nodejs kurulumundan sonra hata alinirsa npm paketlerinin force olarak install edilmesini sagliyor )
npx create-react-app my-react-app
cd my-react-app
npm start
http://localhost:3000/

--java compile = react transpile

--class ve functional olmak uzere iki tur component yapisi var;

--vs code extentions:
1) Simple React Snippets

-- repodan react kodunu ayaklandirma islemi:
--repodan kodu pull cekip sonra ; "npm install" komutu ile node_modules u yani dependency leri install ediyoruz
-- npm install
-- npm run build
-- npm start

-- bootstrap ve axios api implementation;
npm install bootstrap
npm i axios
--seklinde paket bagimliliklari node_modules e ekleniyor. sonra;


--devtools kurulumu;(https://react.dev/learn/react-developer-tools)
npm install -g react-devtools
--sonra browser extention u nu install ediyoruz
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--manuel kurulum:
-- readme linki : https://github.com/carpediem23/reactjs-corporate-learning-materials/blob/master/react-manually-installation/README.md

1) npm init
2) npm i react-dom –save
3) npm config set registry http://registry.npmjs.org
4) npm install webpack webpack-cli webpack-dev-server - save-dev
5) npm i –save-dev babel-core
6) npm i –save-dev babel-loader
7) npm i –save-dev babel-preset-react
8) npm i –save-dev babel-preset-es2015

--Sonra "src" folder i olusturuyoruz. Icine ; "App.jsx,App.module.css ve index.js" dosyalarini create ediyoruz.

--Sonra "public" folder i olusturup icine "index.html" dosyasi olusturup bos template html yaziyoruz.
(vs code de "!" + enter tusu otomatik html sablonu olusturuyor)

--Sonra ".babelrc.json" ve "webpack.config.js" file larini olusturuyoruz.

-- enson alttaki install komutu ile eksik paketler varsa installation u teyit ediyoruz;
9) npm install
10) npm init @eslint/config
komutu ile eslint toolkit extention unu ekliyoruz;
√ How would you like to use ESLint? · problems
√ What type of modules does your project use? · esm
√ Which framework does your project use? · react
√ Does your project use TypeScript? · No / Yes
√ Where does your code run? · browser
√ What format do you want your config file to be in? · JSON

--default sonuc yukaridaki ornek kullanilabilir.

--sonra eslint i kontrol amacli "npx eslint ./src/App.jsx" komutu ile calistirabiliriz.
-- ".eslintrc.json" config file i ekliyoruz.
Note: "https://eslint.org/docs/latest/use/getting-started" linkinden kurulum adimlarini inceleyebilirsiniz

--sonra prettier i install ediyoruz
--sonra editor den prettier config ayarlarini yapiyoruz
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--todo sample project:
--json server i kuruyoruz;(https://github.com/typicode/json-server)
npm install
npm i -g json-server -D
olmazsa
npm i -g json-server -D
komutunu dene

json-server --watch db.json --port 3009

--hata alinirsa; powershell i admin olarak acip;
"Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser" komutunu calistirdiktan sonra json server i 3009 portunda start etmeyi tekrar deneyin
--ayakta olacak json-server service linki: 
http://localhost:3009/todos
seklinde olacak.

--bunu incele; https://www.geeksforgeeks.org/how-to-do-crud-operations-in-reactjs/

npm i react-bootstrap bootstrap@5.1.3 react-router-dom

--Stateless component ekleme vscode kisa yolu : sfc + enter (Simple Code Snippet extention da)

-- react ta form yonetimi icin kullanilan formik ve yup apileri;
--npm i formik

--Dockerize etme islemi:
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Dockerfile icerigi:
# ------------------------------------------------------
# App Deploy
# ------------------------------------------------------
FROM node:20-alpine AS deploy
WORKDIR /reacteducationws/todo-app-router
ENV PATH /reacteducationws/todo-app-router/node_modules/.bin:$PATH
COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build --loglevel verbose

# ------------------------------------------------------
# Production Deploy
# ------------------------------------------------------
FROM nginx:alpine AS prod
COPY --from=deploy /reacteducationws/todo-app-router/dist /usr/share/nginx/html
RUN rm -rf /etc/nginx/conf.d
COPY /nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
nginx.conf dosyasi icerigi:
server {

  listen 80;

  location / {
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    try_files $uri $uri/ /index.html;
  }

  error_page   500 502 503 504  /50x.html;

  location = /50x.html {
    root   /usr/share/nginx/html;
  }

}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--docker image create komutu:
docker build -t todo-app:1.1 -f Dockerfile .
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--docker run komutu:
docker run --name mytodo-app -d -p 30033:80 todo-app:1.1

--artık localde;
http://localhost:30033/todos/
linkinden deneyebilirsiniz
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--login form ornegi icin;
--oauth server dummy sample url : https://dummyjson.com/docs/auth










